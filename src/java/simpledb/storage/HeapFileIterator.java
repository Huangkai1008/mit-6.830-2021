package simpledb.storage;import simpledb.common.Database;import simpledb.common.DbException;import simpledb.common.Permissions;import simpledb.transaction.TransactionAbortedException;import simpledb.transaction.TransactionId;import java.util.Iterator;import java.util.NoSuchElementException;/** * Helper class that implements the Java Iterator for tuples on a HeapFile */public class HeapFileIterator implements DbFileIterator {    private final HeapFile heapFile;    private final TransactionId tid;    private Iterator<Tuple> pageIterator;    private int pageNumber;    public HeapFileIterator(HeapFile heapFile, TransactionId tid) {        this.heapFile = heapFile;        this.tid = tid;    }    @Override    public void open() throws DbException, TransactionAbortedException {        pageNumber = 0;        pageIterator = getPageTuples(pageNumber);    }    @Override    public boolean hasNext() throws DbException, TransactionAbortedException {        if (pageIterator == null) {            return false;        }        while (true) {            if (pageIterator.hasNext())                return true;            pageNumber++;            if (pageNumber >= heapFile.numPages()) {                pageIterator = null;                return false;            }            pageIterator = getPageTuples(pageNumber);        }    }    @Override    public Tuple next() throws DbException, TransactionAbortedException, NoSuchElementException {        if (pageIterator == null || !pageIterator.hasNext()) {            throw new NoSuchElementException();        }        return pageIterator.next();    }    @Override    public void rewind() throws DbException, TransactionAbortedException {        close();        open();    }    @Override    public void close() {        pageIterator = null;    }    private Iterator<Tuple> getPageTuples(int pageNumber) throws TransactionAbortedException, DbException {        PageId pageId = new HeapPageId(heapFile.getId(), pageNumber);        HeapPage page = (HeapPage) Database.getBufferPool().getPage(tid, pageId, Permissions.READ_ONLY);        if (page == null) {            throw new DbException("Page not found");        }        return page.iterator();    }}